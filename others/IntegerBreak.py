'''

https://leetcode.com/problems/integer-break/description/

这道题血雨腥风，没有什么特别的思路，为什么是2和3，其实没有太深刻的理解，刚开始会以为是刚好开根号附近的数字，比如10开根号是3，
则3，3，4会是最大的，但是这么想其实是3*3=10作为乘积了，并不对

但是作为2和3，是可以将一个数分解成的最小单位了，不可能是4，不可能是5，因为5可以分解成3和2，这样可以将一个数分解更多的数，这样乘积应该就是最大的了，而且尽量用3
比如8可以分解成 3 3 2 和 2 2 2 2，因为既然3和2选择，肯定选择更大的。

而3，2只能分解成2，1和1，1，因为2*1<3，而且1*1<2，所以选2和3，其他数都可以分解而乘积大于这个数，所以选2和3

所以这种题，有一种动态规划的思想在里面，就是从小到大去看，发现规律，从反面推有时候也是一种很好的思路

Runtime: 42 ms
Your runtime beats 32.67 % of python submissions.
'''


class Solution(object):
    def integerBreak(self, n):
        """
        :type n: int
        :rtype: int
        """
        # 最大的组合，必定是3和2的组合，而且能选3则不选2
        if n <= 2:
            return 1
        elif n == 3:
            return 2
        elif n % 3 == 0:
            # 可以被3整除则说明有这么多个3，尽量使用3
            return 3 ** (n/3)
        elif n % 3 == 1:
            # 说明是4或者4的倍数，4单独拿出来，就可以分离出剩下是3的倍数的了
            return 4 * (3 ** ((n-4)/3))
        else:
            # 说明是2的倍数，则剩下就可以分离出3的倍数的了
            return 2 * 3 ** (n/3)
